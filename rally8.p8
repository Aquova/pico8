pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- rally-8
-- @aquova

function _init()
	screen=128
	mapsize=2*screen
	p1={x=0,y=0,sx=0,sy=0,d='u',spd=2}
	cam={x=0,y=0}

	-- this can probably be condensed?	
	turns={u={'r','l'},d={'l','r'},l={'u','d'},r={'d','u'}}
	
	lives=3
	level=1
	score=0
	maxflags=10
	loadlevel()
	
	dust={}
	enemies={}
		
	upd=update_main
	drw=draw_main
end

function _update()
	upd()
end

function _draw()
	drw()
end
-->8
-- main game

function update_main()
	local celx=round(p1.x/8)
	local cely=round(p1.y/8)
	
	if checkintersection() then		
		if btn(⬅️) then
			local m=mget(celx-1,cely)
			if not fget(m,0) then
				p1.d='l'			
			end
		elseif btn(➡️) then
			local m=mget(celx+1,cely)
			if not fget(m,0) then
				p1.d='r'
			end
	 elseif btn(⬆️) then
			local m=mget(celx,cely-1)
			if not fget(m,0) then
				p1.d='u'
			end
		elseif btn(⬇️) then
		 local m=mget(celx,cely+1)
		 if not fget(m,0) then
		 	p1.d='d'
		 end
		end
	end
	
	if checkwalls(p1.d) then
		for d in all(turns[p1.d]) do
			if not checkwalls(d) then
				p1.d=d
				break		
			end
		end	
	end
	
	checkflags()
				
	if p1.d=='u' then
		p1.y-=p1.spd
	elseif p1.d=='d' then
		p1.y+=p1.spd
	elseif p1.d=='l' then
		p1.x-=p1.spd
	elseif p1.d=='r' then
		p1.x+=p1.spd
	end
	
	local m=mget(celx,cely)
	if fget(m,1) then
		death()
	end

	cam.x=p1.x-(screen/2)+4
	cam.y=p1.y-(screen/2)+4
	camera(cam.x,cam.y)
 frames+=1
 
 if frames%10==0 then
 	fuel-=1
 	if fuel==0 then
 		death()
 	end
 end
end

function draw_main()
	cls(11) -- outside of map should be green
	map(0,0,0,0,mapsize/8,mapsize/8)
	
	if (p1.d=='u') then 
		spr(1,p1.x,p1.y)
	elseif (p1.d=='d') then
		spr(1,p1.x,p1.y,1,1,false,true)
	elseif (p1.d=='l') then
		spr(2,p1.x,p1.y)
	elseif (p1.d=='r') then
		spr(2,p1.x,p1.y,1,1,true)
	end
	
	drawfuel()
	drawbar()
end
-->8
-- player functions

function checkintersection()
	-- only return true if at intersection
	local celx=round(p1.x/8)
	local cely=round(p1.y/8)
	
	if abs(celx*8-p1.x)==0 then
		if abs(cely*8-p1.y)==0 then
			return true
		end
	end
	
	return false
end

function checkwalls(d)
 local celx
 local cely
	if d=='u' then
		celx=flr(p1.x/8)
		cely=flr((p1.y-1)/8)
	elseif d=='d' then
  celx=flr(p1.x/8)
		cely=flr((p1.y+1)/8)+1
	elseif d=='l' then
		celx=flr((p1.x-1)/8)
		cely=flr(p1.y/8)
	elseif d=='r' then
		celx=flr((p1.x+1)/8)+1
		cely=flr(p1.y/8)
	end
	
	local m=mget(celx,cely)
	return fget(m,0)
end

function death()
	lives-=1
	p1.x=p1.sx
	p1.y=p1.sy
	fuel=100
	-- todo: reset enemy positions too
	
	if lives==0 then
		gameover()
	end
end

function gameover()

end

function createdust()
	local d={}
	d.x=round(p1.x/8)
	d.y=round(p1.y/8)
	d.age=0
	
	d.draw=function(self)
		spr(7,d.x,d.y)
	end
	
	return d
end

function checkflags()
	local celx=round(p1.x/8)
	local cely=round(p1.y/8)
	local m=mget(celx,cely)
	if m==3 or m==4 then
		mset(celx,cely,33)
		flags-=1
		local mult=x2 and 2 or 1
		score+=(maxflags-flags)*mult*100
	elseif m==4 then
		mset(celx,cely,33)
		flags-=1
		x2=true
		local mult=x2 and 2 or 1
		score+=(maxflags-flags)*mult*100
	end 
	
	if flags==0 then
		nextlevel()
	end
end
-->8
-- utilities

-- rounds a number up/down
function round(x)
	return flr(x+0.5)
end

-- calculates x for centering text between x1 and x2
function ctext(t,x1,x2)
	return ((x2-x1)/2)-#t*2
end

-- prints center aligned text
-- takes camera into account
function printc(t,y,c)
	print(t,cam.x+ctext(t,0,screen),cam.y+y,c)
end

-- prints right aligned text
function printr(t,y,c)
	local x=screen-4*#t-1
	print(t,cam.x+x,cam.y+y,c)
end

-- prints text with a border
function printb(t,x,y,cin,cout)
	for i=-1,1 do
		for j=-1,1 do
			print(t,cam.x+(x+i),cam.y+(y+j),cout)
		end
	end
	
	print(t,cam.x+x,cam.y+y,cin)
end

-- print both centered and w/ border
function printbc(t,y,cin,cout)
	local x=ctext(t,0,screen)
	printb(t,x,y,cin,cout)
end
-->8
-- enemy functions

function newenemy(x,y)
	local e={}
	
	return e
end
-->8
-- level generation

function loadlevel()
	frames=0
	flags=maxflags
	fuel=100
	x2=false
	
	-- resets map
	reload()
	-- iterate through map, replace special tiles with objects
	for x=0,mapsize/8 do
		for y=0,mapsize/8 do
			if mget(x,y)==8 then
				mset(x,y,33)
				p1.sx=8*x
				p1.x=p1.sx
				p1.sy=8*y
				p1.y=p1.sy
			elseif mget(x,y)==9 then
				mset(x,y,33)
				local e=newenemy(8*x,8*y)
				add(enemies,e)
			end
		end
	end
	
	placeflags()
	placerocks()
end

function placeflags()
	local sflag=1
	local flag=maxflags-1
	
	-- set s flag
	repeat
		local x=flr(rnd(mapsize/8))
		local y=flr(rnd(mapsize/8))
		if mget(x,y)==33 then
			mset(x,y,4)
			sflag-=1
		end
	until sflag==0
	
	-- set regular flags
	repeat
		local x=flr(rnd(mapsize/8))
		local y=flr(rnd(mapsize/8))
		if mget(x,y)==33 then
			mset(x,y,3)
			flag-=1
		end
	until flag==0
end

function placerocks()
	local rocks=5
	
	repeat
		-- todo: dont put rocks next to flags
		local x=flr(rnd(mapsize/8))
		local y=flr(rnd(mapsize/8))
		if mget(x,y)==33 then
			mset(x,y,5)
			rocks-=1
		end
	until rocks==0
end

function nextlevel()
	level+=1
	loadlevel()
end
-->8
-- drawing functions

function drawminimap()
 	
end

function drawfuel()
	local barwidth=fuel/100*screen/3
	local c=(fuel<20) and 8 or 10
	rectfill(cam.x+screen/3-1,cam.y+screen-13,cam.x+2*screen/3+1,cam.y+screen-3,0)
	rectfill(cam.x+screen/3,cam.y+screen-12,cam.x+screen/3+barwidth,cam.y+screen-4,c)
	printc("fuel",screen-10,5)
end

function drawbar()
	rectfill(cam.x,cam.y,cam.x+screen,cam.y+8,3)
	printb("round: "..level,2,2,7,0)
	printbc("score: "..score,2,7,0)
end
__gfx__
00000000050cc05000000555ffaaffffffaaffffffffffff00888800004444005555555555555555000000000000000000000000000000000000000000000000
00000000055cc55055500050ffaaafffffaaaffffff555ff08899880044994405000000550000005000000000000000000000000000000000000000000000000
00700700050cc050050cccccffaaaaffffaaaaffff5fff5f889aa988449ff944500cc00550800805000000000000000000000000000000000000000000000000
0007700000cccc00cccc777cffaaaaafffaaa888f54444f589a77a9849f77f9450c00c0550088005000000000000000000000000000000000000000000000000
0007700000c77c00cccc777cffafffffffaf8fff5444444589a77a9849f77f9450c00c0550088005000000000000000000000000000000000000000000000000
0070070050c77c05050cccccffafffffffaff88f54444445889aa988449ff944500cc00550800805000000000000000000000000000000000000000000000000
0000000055c77c5555500050ffafffffffaffff85444444508899880044994405000000550000005000000000000000000000000000000000000000000000000
0000000050cccc0500000555faaafffffaaa888ff555555f00888800004444005555555555555555000000000000000000000000000000000000000000000000
ffffffffffffffffffffffffbbbbbbbbbbbbbbbbffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
fff999999999999999999fffbbbbbbbbbbbbbbbbff9999ffff99999999999999999999ff00000000000000000000000000000000000000000000000000000000
ff9bbbbbbbbbbbbbbbbbb9ffbbbbbbbbbbbbbbbbf9bbbb9ff9bbbbbbbbbbbbbbbbbbbb9f00000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9ff9bbbbbbbbbbbbbbbbbbbb9f00000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9ff9bbbbbbbbbbbbbbbbbbbb9f00000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9ff9bbbbbbbbbbbbbbbbbbbb9f00000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9fbbbbbbb99bbbbbbbf9bbbb9fff99999999999999999999ff00000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9fbbbbbb9ff9bbbbbbf9bbbb9fffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000
f9bbbbbbffffffffbbbbbb9fbbbbbb9ff9bbbbbbf9bbbb9fffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbffffffffbbbbbb9fbbbbbbb99bbbbbbbf9bbbb9ffff9999999999fff0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbffffffffbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9fff9bbbbbbbbbb9ff0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbffffffffbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9ff9bbbbbbbbbbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbffffffffbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9ff9bbbbbbbbbbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbffffffffbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9ff9bbbbbbbbbbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbffffffffbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9ff9bbbbb99bbbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbffffffffbbbbbb9fbbbbbbbbbbbbbbbbf9bbbb9ff9bbbb9ff9bbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9fffffffffbbbbbbbbf9bbbb9ff9bbbb9ff9bbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9fff9999ffbbbbbbbbf9bbbb9ff9bbbbb99bbbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9ff9bbbb9fbbbbbbbbf9bbbb9ff9bbbbbbbbbbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9ff9bbbb9fbbbbbbbbf9bbbb9ff9bbbbbbbbbbbb9f0000000000000000000000000000000000000000000000000000000000000000
f9bbbbbbbbbbbbbbbbbbbb9ff9bbbb9fbbbbbbbbf9bbbb9ff9bbbbbbbbbbbb9f0000000000000000000000000000000000000000000000000000000000000000
ff9bbbbbbbbbbbbbbbbbb9fff9bbbb9fbbbbbbbbf9bbbb9fff9bbbbbbbbbb9ff0000000000000000000000000000000000000000000000000000000000000000
fff999999999999999999fffff9999ffbbbbbbbbff9999fffff9999999999fff0000000000000000000000000000000000000000000000000000000000000000
ffffffffffffffffffffffffffffffffbbbbbbbbffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000020000000000000000000001010101010101010100000000000000010001010101010100000000000000000101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1331313131313131313131313131313131143434343434133131313131313114000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212121212121212121212121212121303131313131322121212121212120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221101221101221101221101221101221212121212121212110111111122120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221202221202221202221202221202221101221212110122120133131322120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221202221202221202221202221202221202221212120222120222121212120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221202221202221202221202221202221202311111124222120222110122120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221303221303221303221303221303221303131313131322120222120222120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212121212121212121212121212121212121212121212130322120222120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221332110122116182110122116171717171717171717182121212120222120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212120222121212120222121212121212121212121212110111124222120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2312211024231111111124222110111111111221152110122130313131322120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3422212034133131313114222130311413313221252120222121212121212120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3422212034222121212120222121212022212121252120222110111112211024000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3422212034222121212120222115212022212617372120222130313132212034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3422212034231221211024222125212022212521212120222121212121212034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1332213031313221213031322125212022212521101124231112211012212034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212121212121212121212135213032213521303131313132212022212034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221101111111111111111122121212121212121212121212121212022212034000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221303131143434133131322116171821161718211617171718213032213014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212121303131322121212121212121212121212121212121212121212120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212121212121212121152115211521152115211521101111111111122120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221101111111111122121252125212521252125212521201331313131322120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221303114341331322121252125212521252125212521202221212121212120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212120342221212121252125212508252125212521202221101111122120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221152120342221152121252125212521252125212521202221201331322120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221352120342221352121252125212521252125212521202221202221212120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212120342221212121250925092521250925092521303221303221332120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221101124342311122121352135213521352135213521212121212121212120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221303131313131322121212121212121212121212121101221161718212120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2221212121212121212121161717171717171717171821303221212121211024000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2311111111111111122121212121212121212121212121212121101111112434000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3434343434343434231111111111111111111111111111111111243434343434000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
