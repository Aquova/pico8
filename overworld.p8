pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- overworld
-- @aquova

function _init()
	screen=128
	player=new_player(screen/2,screen/2)
	cam={x=0,y=0,dx=0,dy=0,spd=4,delta=0}
	camera(cam.x,cam.y)
end

function _update()
	if cam.delta<=0 then
		if player.attack_tmr>0 then
			player:attack()
		else
			player:move()
			player:checkcam()
		end
	else
		player.x+=(player.w*cam.spd*sign(cam.dx))/screen
		player.y+=(player.h*cam.spd*sign(cam.dy))/screen
		cam.x+=cam.dx
		cam.y+=cam.dy
		camera(cam.x,cam.y)
		cam.delta-=cam.spd
	end
end

function _draw()
	cls(3)
	map(0,0,0,0,16,16)
	if player.attack_tmr>0 then
		player:drawsword()
	end
	player:draw()
end
-->8
-- player

function new_player(x,y)
	local p={
		x=x,
		y=y,
		w=16,
		h=16,
		spd=1,	 -- movement speed
		sprt=1, -- which sprite
		drctn=⬇️,
		flp=false,
		anim=0, -- animation frames
		attack_tmr=0
	}
	
	function p:move()
		local startx,starty=self.x,self.y
	
		-- reset animation if not moving
		if band(btn(),0b1111)~=0 then
			self.anim=(self.anim+1)%8
		end
		
		-- check if attacking
		if btnp(❎) then
			self.attack_tmr=10
			return
		end
	
		if btn(⬆️) then 
			self.y-=1
			self.sprt=7
			self.flp=self.anim<4
			self.drctn=⬆️
		elseif btn(⬇️) then 
			self.y+=1
			self.sprt=5
			self.flp=self.anim<4
			self.drctn=⬇️
		end
		
		if btn(⬅️) then
			self.x-=1
			self.sprt=(self.anim<4) and 1 or 3
			self.flp=false
			self.drctn=⬅️
		elseif btn(➡️) then
			self.x+=1
			self.sprt=(self.anim<4) and 1 or 3
			self.flp=true
			self.drctn=➡️
		end
		
		if self:checkmapcollide() then
			self.x,self.y=startx,starty
		end
	end
	
	function p:checkmapcollide()
		-- check all tiles player can be on
		-- find four corners, iterate between
		local startx,starty=get_cel(self.x,self.y)
		local endx,endy=get_cel(self.x+self.w,self.y+self.h)
		
		for x=startx,endx do
			for y=starty,endy do
				local m=mget(x,y)
				if fget(m,0) then
					return true
				end
			end
		end
		
		return false
	end
	
	function p:checkcam()
		if self.x-cam.x<0 then
			cam.delta=screen
			cam.dx=-cam.spd
			cam.dy=0
		elseif self.x-cam.x>screen-self.h then
			cam.delta=screen
			cam.dx=cam.spd
			cam.dy=0
		elseif self.y-cam.y<0 then
			cam.delta=screen
			cam.dx=0
			cam.dy=-cam.spd
		elseif self.y-cam.y>screen-self.w then
			cam.delta=screen
			cam.dx=0
			cam.dy=cam.spd
		end
	end
	
	function p:attack()
		self.attack_tmr-=1
	end
	
	function p:draw()
		spr(self.sprt,self.x,self.y,2,2,self.flp)
	end
	
	function p:drawsword()
		if self.drctn==⬆️ then
			spr(9,self.x+self.w/4,self.y-self.h,1,2)
		elseif self.drctn==⬇️ then
			spr(9,self.x+self.w/4,self.y+self.h,1,2,false,true)
		elseif self.drctn==⬅️ then
			spr(10,self.x-self.w,self.y+self.h/4,2,1,true)
		elseif self.drctn==➡️ then
			spr(10,self.x+self.w,self.y+self.h/4,2,1)
		end	
	end
	
	return p
end
-->8
-- enemies
-->8
-- utility functions

-- same as sgn, but sign(0)==0
function sign(x)
	return (x==0) and 0 or sgn(x)
end

-- given (x,y), returns coords of map cell
function get_cel(x,y)
	local out_x=flr(x/8)
	local out_y=flr(y/8+1)

	return out_x,out_y
end
__gfx__
00000000000000111110000000000000000000000000011111000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000011cfccc10000000001111110000000001cffcc100000000000111100000000011000001110000000000011111100000000000000000000000000
007007000001ff1cffcc100001011cffccc1100000011c11ccc11000000001ffff100000001ff10011cc111111111100fffffc11000000000000000000000000
000770000111cff1cc1cc100011ff1ccffccc100001f11ffffc1f10000011f1111f11000001ff1001cff1fffffffff10111cfffc101100000000000000000000
0007700000111cff11f1cc10011cff1cc1ccc100001f1f1111f1f100001f11cffc11f100001ff1001cff1fffffffff1000011cfff1ff10000000000000000000
007007000000111c1cf1cc100011cff11f1cc100001f11111111f100001f1ccffcc1f100001ff10011cc1111111111000000011c1fff10000000000000000000
000000000011f1f11ff1c100000111c1cf1c1000001cc111111cc100001f1c1cfcc1f100001ff100001110000000000000000001fff100000000000000000000
00000000001ff1ff1ff11000011f1f11ff1c10000001ff1ff1ff1000001c11ccfcc1c100001ff10000000000000000000000001fff1f10000000000000000000
000000000001cfff1fc1000001ff1ff1ff1100000001cf1ff1fc1000000111cccc111000001ff1000000000000000000000001fff1cfc1000000000000000000
0000000000001ccc1c110000001cfff1fc100000001c1cffffc1c1000001c1ccc1c1c100001ff100000000000000000000001fff101ff1000000000000000000
000000000000111111c10000000111111110000001fc11111111c100001fc1cc1cc1c100001ff10000000000000000000101fff1001cfc100000000000000000
0000000000001c1ff1cc100000001ff1cc11000001f11cccc1ffc100001f1c11ccfc11000111111000000000000000001c1cff100001ff100000000000000000
0000000000001f1ff1cc100000001ff1cc1f10000011cffff1ff10000001cfffffcc100001cffc1000000000000000001cf1c1000001cf100000000000000000
0000000000001c11111110000001111cc11f10000001111ccc11000000011ccccc11100001cffc1000000000000000001cff100000001f100000000000000000
000000000000111ffff10000001ffff111ff10000011cff1111110000001111111ff1100001cc100000000000000000011ccc10000001f100000000000000000
0000000000011111111110000011111111111100000111111111000000001111111110000011110000000000000000000111100000001f100000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000001111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000011777771100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000011777777c110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000117777777cc11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000111177777c1111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000017711777cc1771000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000177711cc1177c1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000177771111777c1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000017777c177777c1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000017777c17777c11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011777c177cc110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000011ccc1cc11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2122212221222122212221222122212200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3132313231323132313231323132313200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3132000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2122000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
3132000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
